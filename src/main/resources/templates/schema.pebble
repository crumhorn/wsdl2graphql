// WARNING! WARNING! WARNING!WARNING! WARNING! WARNING! WARNING! WARNING!
// ----------------------------------------------------------------------
// THIS FILE IS AUTO GENERATED - ONLY REMOVE THIS COMMENT IF YOU CAN ENSURE THE FILE WILL NOT BE OVERWRITTEN AT NEXT COMPILE TIME AND YOU'VE MANUALLY CHANGED IT FROM ITS SOURCE
// ----------------------------------------------------------------------

import {
    graphql,
    GraphQLSchema,
    GraphQLObjectType,
    GraphQLString,
    GraphQLBoolean,
    GraphQLInt,
	GraphQLFloat,
    GraphQLList,
    GraphQLEnumType,
    GraphQLInterfaceType,
    GraphQLNonNull
} from 'graphql';

import {
    fromGlobalId,
    globalIdField,
    nodeDefinitions
} from 'graphql-relay';

// ENUMS
{% for enum in enums %}
const {{ enum.name }} = new GraphQLEnumType({
	name: '{{enum.name}}',
	values: {
		{% for enumVal in enum.enumValues %}
		{{ enumVal }}: {},
		{% endfor %}
	}
});

{% endfor %}

// CLASSES
const unknownClass = new GraphQLObjectType({
	name: 'unknownClass',
	fields: {
		id: { type: GraphQLString }
	}
});

{% for type in types %}
{% if type.derivesFrom != null %}
// derives from: '{{ type.derivesFrom }}'
{% endif %}
const {{ type.name }} = new GraphQLObjectType({
    name: '{{ type.name }}',
    fields: {
        {% for field in type.fields %}
		{% if field.notes != null %}
			{{ field.notes }}			
		{% endif %}
		{{- field.name }}: { type: {{ field.type }} }{% if loop.index != loop.length -1 %}{{- "," -}}{% endif %}
		
        {% endfor %}
    }
});

{% endfor %}

// METHODS AND SCHEMA
export var Schema = new GraphQLSchema({
    query: new GraphQLObjectType({
        name: 'RootQueryType',
        description: 'this is the root',
        fields: {
            {% for operation in operations %}
            {{ operation.name }}: {
                 type: {{ operation.type }}, 
				 {% if operation.args.size() > 0 %}
				 args: {
					{% for arg in operation.args %}
					{{ arg.name }}: {
						type: {{ arg.type }}
						
					},
					{% endfor %}
				 },
				 {% endif %}
                 description: '',
                 {{ operation.resolveType }} {
                    return {{ operation.return }};
                 }
             },
            {% endfor %}
        }
    })
});